#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass IEEEtran
\begin_preamble
%\usepackage{url}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type authoryear
\biblatex_bibstyle authoryear
\biblatex_citestyle ieee
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
QuadLoco: Algorithm Summary
\end_layout

\begin_layout Author
Dave Knopp
\begin_inset Newline newline
\end_inset

Stellacore Corporation
\end_layout

\begin_layout Abstract
This technical note describes the overall algorithms used in the quadrant
 target detection software package, QuadLoco (
\begin_inset CommandInset citation
LatexCommand citet
key "Knopp_QuadLoco_-_A_2024"
literal "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename AlgoExQuadsInItaly.png
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Quadrant-targets-in-wild"

\end_inset

Example quadrant targets on historic buildings in Italy encountered incidentally.
 Although the exact purpose of these specific targets is unknown, quadrant
 pattern targets are often used in archaeological surveys, historical preservati
on, photogrammetric documentation/reality capture and technical engineering
 studies.
 Photos by Johann Albrecht.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Terminology
\end_layout

\begin_layout Standard
In its current form (ca Q4 2024), QuadLoco assumes that the target has been
 preliminarily detected.
 A practical definition of 
\begin_inset Quotes eld
\end_inset

Detection
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Detection"
symbol "Detection"
description "Determining that a quadrant target exists along with nominal location and bounds (enough information to define an image chip)."
literal "false"

\end_inset

 is that a bounding image chip can be extracted from an overall larger source
 image, and the resulting chip contains at least the center of the quad
 target signal.
 Given a detected quad target, the QuadLoco software provides center point
 
\begin_inset Quotes eld
\end_inset

Localization
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Localization"
symbol "Localization"
description "Very precise determination of quad target image geometry (i.e., center location and radial edge directions)."
literal "false"

\end_inset

.
 The center point is localized to sub pixel precision by a image processing
 computations that respond to a combination of quad target signal characteristic
s
\end_layout

\begin_layout Standard
The point is to determine the quad center
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "QuadCenter"
symbol "Quad Center (img)"
description "Location in image/chip associated with the image of the quadrant taget center point (where 4 radial edges come closest to intersection)."
literal "false"

\end_inset

 location
\end_layout

\begin_layout Standard
The QuadLoco software package assumes it is working with an image
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Image.img"
symbol "Image (img)"
description "A digital image. Stored as collection of values in a raster grid format."
literal "false"

\end_inset

 
\begin_inset Quotes eld
\end_inset

chip
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Chip.img"
symbol "Chip (img)"
description "A generally small image that is associated with a single quadrant target signal. Typically extracted from a larger image (e.g. based on a prior quadrand target detection results)."
literal "false"

\end_inset


\begin_inset Quotes erd
\end_inset

 that contains an image space signal
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "QuadTarget.img"
symbol "Quad Target (img)"
description "A 2D mathematical description of the image of an object space quadrant target."
literal "false"

\end_inset

 associated with a object space quadrant target
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "QuadTarget.obj"
symbol "Quad Target (obj)"
description "A 3D (albeit it flat) physical target with a high contrast pattern on it."
literal "false"

\end_inset

.
 I.e., the image chip contains a complete quad signal
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "quad.sig"
symbol "Quad (sig)"
description "The mathematical description of a quadrant target image."
literal "false"

\end_inset

.
 It is assumed that this image signal is related to the quadrant taget object
 geometry via ideal central perspective projection.
\end_layout

\begin_layout Standard
The source data represent a 2D, scalar valued image that is loaded into
 a floating point Grid
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Grid.type"
symbol "Grid (type)"
description "A 2D data structure storing data in \"raster scan\" ordering (e.g. top row from start col to end column then next row, and so on)."
literal "false"

\end_inset

 structure.
 Each pixel
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "pixel.type"
symbol "Pixel (type)"
description "One cell of a Grid. Associated with a grid location (row, col) and a data value (e.g. intensity of either intergral or floating point type)."
literal "false"

\end_inset

 in the image is associated with a scalar value.
 Comparing the value of adjacent pixels within a local neighborhood
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Neighborhood"
symbol "Neighborhood"
description "Consideration of pixels adjacent to a given pixel. In most cases this is interpreted to mean the 8 pixels in a 3x3 group of Grid cells centered on the pixel of interest."
literal "false"

\end_inset

, allows computing a vector valued pixel gradient
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Gradient"
symbol "Gradient"
description "The mathematical concept represented by a vector expressing the direction of maximal change of (scalar) pixel intensity values within a Neighborhood."
literal "false"

\end_inset

.
\begin_inset Note Comment
status open

\begin_layout Plain Layout
(Edge Neighborhood, Filter Neighborhood)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
An 
\begin_inset Quotes eld
\end_inset

edgel
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Edgel.type"
symbol "Edgel (type)"
description "Representation of an \"edge\" inferred from an image signal. An edgel comprises its 2D coordiante grid location (row,col) and a 2D vector gradient value."
literal "false"

\end_inset


\begin_inset Quotes erd
\end_inset

 is a concept and software data type comprising a pixel location
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "Location.img"
symbol "Location (img)"
description "The precise (e.g. \"sub-pixel\") Grid coordinates associated with a point of interest."
literal "false"

\end_inset

 along with a pixel gradient member.
 A key computation task is to identify edgels that are associated with radial
 edges
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "RadialEdge"
symbol "Radial Edge"
description "Any of the four lines emanating from the center of a quad target that delineate the foreground/background quad target pattern."
literal "false"

\end_inset

 in the quadrant target signal.
\end_layout

\begin_layout Standard
Software data items of particular interest, identified by names commonly
 used in the software, include:
\end_layout

\begin_layout Itemize
inGrid - input data to algorithm (i.e.
 an integer valued image chip)
\end_layout

\begin_layout Itemize
loadGrid
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "LoadGrid.item"
symbol "loadGrid (item)"
description "A 2D grid of scalar data (often uint8_t data type) that are generally interpreted to form an digital image."
literal "false"

\end_inset

 - input data loaded into memory as floating point values
\end_layout

\begin_layout Itemize
softGrid
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "softGrid.item"
symbol "softGrid (item)"
description "Image of pixel values from loadGrid after a smoothing operatoin."
literal "false"

\end_inset

 - result of applying a smoothing filter to loadGrid
\end_layout

\begin_layout Itemize
gradGrid
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "gradGrid.item"
symbol "gradGrid (item)"
description "Grid of gradient vector values corresponding with loadGrid input pixel values."
literal "false"

\end_inset

 - result of applying a gradient filter to softGrid
\end_layout

\begin_layout Itemize
corrEdgels
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "corrGrid.item"
symbol "corrEdgels (item)"
description "Collection of Edgel instances that have been corroborated by sufficient number of edgel directions in neighborhood grid locations."
literal "false"

\end_inset

 - pixel location and gradient information extracted from gradGrid
\end_layout

\begin_layout Itemize
TODO/ radEdgels#radEdgels - subset of corrEdgels that satisfy the condition
 
\begin_inset Quotes eld
\end_inset

are likely radially opposite to others
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Subsection
Pattern Characteristics
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename AlgoExQuadPattern.png
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Quadrant-target-pattern"

\end_inset

Quadrant target pattern concepts.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Simulation
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename AlgoExSimQuad.png
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Example-simulated-image"

\end_inset

Example simulated quad target image.
 The high contrast, four quadrant pattern is self evident.
 This example is generated with project program demo/demoSimQuadImage and
 is an example of simulating only the target area (no surrounding background
 pixels).
 This example includes radiometric noise, but no radiometric trend bias.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For basic software evaluation and testing, the QuadLoco project includes
 simulation code for rendering artificial images (cf.
 Figures
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Example-simulated-image"
plural "false"
caps "false"
noprefix "false"

\end_inset

 and
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Simulated-general-image"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
The simulation process includes:
\end_layout

\begin_layout Itemize
Ideal central perspective projection camera (aka a pinhole camera model)
\end_layout

\begin_layout Itemize
Basic ray tracing (from camera pixels toward object quad target)
\end_layout

\begin_layout Itemize
Simulation of shot noise (Poison distributions)
\end_layout

\begin_layout Itemize
Optional simulation of intensity bias/trend across the target
\end_layout

\begin_layout Itemize
Optional simulation of background intensity (an artificial mathematical
 pattern)
\end_layout

\begin_layout Itemize
Simulation of finite pixel sizes (via pixel super sampling using pseudo
 random perturbation of rays within each pixel
\end_layout

\begin_layout Subsection
General Approach
\end_layout

\begin_layout Subsubsection
Data Handling
\end_layout

\begin_layout Itemize
Load an input image comprising integral values representing intensity (e.g.
 inGrid) and convert these values to floating point data structure in memory
 (e.g.
 loadGrid).
\end_layout

\begin_layout Subsubsection
Candidate Detection
\end_layout

\begin_layout Standard
Center detection - identifying candidate center locations within the image
 chip - consists of
\end_layout

\begin_layout Itemize
Symmetry filter, SymRing, to highlight center pixel (list of candidates)
\end_layout

\begin_layout Itemize
Corroboration by multiple SymRings
\end_layout

\begin_layout Subsubsection
Candidate Qualification
\end_layout

\begin_layout Standard
Center qualification - determining if candidates are consistent with other
 information about the target center - consists of:
\end_layout

\begin_layout Itemize
Edge info extraction from a neighborhood around candidate centers
\end_layout

\begin_layout Itemize
Determination if strong edge locations (not gradient directions) are consistent
 with an 
\begin_inset Quotes eld
\end_inset

X
\begin_inset Quotes erd
\end_inset

 geometry centered near to the candidate center.
\end_layout

\begin_layout Subsubsection
Location Refinement
\end_layout

\begin_layout Standard
Center refinement - determining a precise center (at sub pixel level) -
 consists of
\end_layout

\begin_layout Itemize
Half-Turn symmetry filter to provide smooth surface used for sub pixel peak
 location
\end_layout

\begin_layout Itemize
Peak estimation (currently using a simplistic weighted centroid algorithm).
\end_layout

\begin_layout Subsection
Algorithm Summary
\end_layout

\begin_layout Subsubsection
Annular Filter - SymRing
\end_layout

\begin_layout Standard
Characteristics within filter window (SymRing annulus)
\end_layout

\begin_layout Itemize
High contrast
\end_layout

\begin_layout Itemize
Half turn rotation symmetry
\end_layout

\begin_layout Itemize
Repeated azimuthal hi-lo-hi-lo pattern.
\end_layout

\begin_layout Subsubsection
Multi Radius Corroboration
\end_layout

\begin_layout Standard
Run SymRing filter with sequence of filter radii (e.g.
 5, and 3 seems to work well for simulated data).
 Multiply the results together.
\end_layout

\begin_layout Standard
Note that only the first filter is run over the entire image.
 Peaks are found in the response.
 The following sequence of SymRing filters are then run only at the locations
 of the initial peaks.
\end_layout

\begin_layout Subsubsection
Edge Corroboration
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset

/TBD
\end_layout

\begin_layout Subsubsection
Half Turn SSD
\end_layout

\begin_layout Standard
This is done instead of peak finding in the SymRing response.
\end_layout

\begin_layout Standard
TODO - probably SimRing response peaks should be tried for subpixel location.
\end_layout

\begin_layout Subsubsection
Peak Estimation
\end_layout

\begin_layout Standard
Peak estimation is based on a weighted computation in the neighborhood of
 the strongest single peak.
 A neighborhood of SSD responses is converted to peak weights by remapping
 the SSD values to pseudo probabilities as follows.
 The peak (maximum in neighborhood) is mapped to zero.
 The smallest SSD response in the hood is mapped to 4.
 The weight of each pixel is assigned using a Gaussian function with the
 remapped value (0-4) as argument.
\end_layout

\begin_layout Standard
The returned peak, is the weighted centroid of the neighborhood locations
 weighted by the Gaussian of the remapped SSD values.
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Subsection
Simulation
\end_layout

\begin_layout Standard
Simulation of data....
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset

/TBD.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename AlgoExQuadSimA.png
	width 50col%

\end_inset


\begin_inset Graphics
	filename AlgoExQuadSimB.png
	width 50col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Simulated-general-image"

\end_inset

Simulated perspective image with an arbitrary general viewing geometry.
 The left panel shows the image using a classic linear display map.
 At the contrast boundaries along the radial edges, the 
\begin_inset Quotes eld
\end_inset

anti-aliasing
\begin_inset Quotes erd
\end_inset

 effect of simulation super sampling can be seen.
 The right panel presents the same image displayed using an approximate
 histogram equalization in order to better illustrates radiometric noise
 in the target's dark regions.
 The 
\begin_inset Quotes eld
\end_inset

ragged
\begin_inset Quotes erd
\end_inset

 edges around the outside of the target image is a result of missing background
 (e.g.
 conceptually, this simulates a 
\begin_inset Quotes eld
\end_inset

hard
\begin_inset Quotes erd
\end_inset

, pixel by pixel crop from a larger image).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Example of real quads....
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset

/TBD.
\end_layout

\begin_layout Section
Examples
\end_layout

\begin_layout Standard
....
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO
\end_layout

\end_inset

/TBD.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "References"

\end_inset


\end_layout

\end_body
\end_document
